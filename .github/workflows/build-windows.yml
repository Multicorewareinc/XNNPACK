name: Build Windows (x86, x64) Tests

on:
  workflow_call:
    inputs:
      run-tests:
        description: 'Whether to also run unit tests where possible.'
        default: true
        required: false
        type: boolean
      update-caches:
        description: 'Whether to update the `ccache` or `bazel` caches, where possible.'
        default: false
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}-${{ inputs.update-caches }}
  cancel-in-progress: true

jobs:
  
  cmake-windows-x64:
    runs-on: windows-server-2022-32core
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}
          max-size: "500M"
          save: ${{ inputs.update-caches }}
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Setup build environment
        shell: bash
        run: |
          echo "VCVARSALL=$(vswhere -products \* -latest -property installationPath)\\VC\\Auxiliary\\Build\\vcvarsall.bat" >> $GITHUB_ENV
      - name: Configure and build
        run: scripts/build-windows-x64.cmd
        shell: cmd
        working-directory: ${{ github.workspace }}
        env:
          CFLAGS: "/UNDEBUG"
          CXXFLAGS: "/UNDEBUG"
      - name: Run tests
        if: ${{ inputs.run-tests }}
        run: ctest -C Release --output-on-failure --parallel $NUMBER_OF_PROCESSORS
        working-directory: ${{ github.workspace }}/build/windows/x64

  cmake-windows-x86:
    runs-on: windows-server-2022-32core
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}
          max-size: "500M"
          save: ${{ inputs.update-caches }}
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Setup build environment
        shell: bash
        run: |
          echo "VCVARSALL=$(vswhere -products \* -latest -property installationPath)\\VC\\Auxiliary\\Build\\vcvarsall.bat" >> $GITHUB_ENV
      - name: Configure and build
        run: scripts/build-windows-x86.cmd
        shell: cmd
        working-directory: ${{ github.workspace }}
        env:
          CFLAGS: "/UNDEBUG"
          CXXFLAGS: "/UNDEBUG"
      - name: Run tests
        if: ${{ inputs.run-tests }}
        run: ctest -C Release --output-on-failure --parallel $NUMBER_OF_PROCESSORS
        working-directory: ${{ github.workspace }}/build/windows/x86